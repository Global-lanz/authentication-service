# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Build and Publish Release
on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]
    branches: [ "main" ]
jobs:
  build-and-deploy-rc:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # necess√°rio para criar tags
      pull-requests: write   # necess√°rio para comentar no PR
      packages: write
    env:
      IMAGE_NAME: maiconlanzendorf/authentication-service
    steps:
      - uses: actions/checkout@v4

      # ‚ú® NOVO: Setup GraalVM para build nativo
      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: maven

      #############################################
      # üöÄ S√≥ gera RC se o PR tiver a label RC
      #############################################
      - name: Generate RC Version
        id: rc_version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') }}
        run: |
          DATE=$(date +'%Y%m%d')
          EXISTING_TAGS=$(git ls-remote --tags origin "refs/tags/RC.${DATE}.*" | wc -l)
          COUNT=$(printf "%03d" $((EXISTING_TAGS + 1)))
          RC_VERSION="RC.${DATE}.${COUNT}"
          echo "RC Version: $RC_VERSION"
          echo "rc_version=$RC_VERSION" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Run tests if Native Image enabled
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && contains(github.event.pull_request.labels.*.name, 'native') }}
        run: mvn test

      # ‚ú® MODIFICADO: Build com op√ß√£o nativa baseado na label
      - name: Build Native Image with Maven and Deploy into Docker Hub
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && contains(github.event.pull_request.labels.*.name, 'native') }}
        run: mvn spring-boot:build-image -Pnative -DskipTests "-Dspring-boot.build-image.imageName=${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}-native" --file pom.xml

      - name: Build Regular Image with Maven and Deploy into Docker Hub
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && !contains(github.event.pull_request.labels.*.name, 'native') }}
        run: mvn spring-boot:build-image -DskipTests "-Dspring-boot.build-image.imageName=${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}" --file pom.xml

      - name: Build with Maven (no deploy)
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'RC') }}
        run: mvn -B package --file pom.xml

      # 4Ô∏è‚É£ Push da imagem Docker para o Docker Hub (adaptado para nativo)
      - name: Push Native Docker Image with RC Tag
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && contains(github.event.pull_request.labels.*.name, 'native') }}
        run: docker push $IMAGE_NAME:${{ steps.rc_version.outputs.rc_version }}-native

      - name: Push Regular Docker Image with RC Tag
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && !contains(github.event.pull_request.labels.*.name, 'native') }}
        run: docker push $IMAGE_NAME:${{ steps.rc_version.outputs.rc_version }}

      # 5Ô∏è‚É£ (Opcional) Cria a tag RC no GitHub
      - name: Create Git Tag
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.rc_version.outputs.rc_version }}
          git push origin ${{ steps.rc_version.outputs.rc_version }}

      # 6Ô∏è‚É£ Comenta no PR com a vers√£o RC criada (adaptado para nativo)
      - name: Comment RC Version on PR (Native)
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && contains(github.event.pull_request.labels.*.name, 'native') }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            üöÄ New **NATIVE** Release Candidate Version generated: `${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}-native`
            üì¶ Native Docker image published:
            `${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}-native`
            
            ‚ö° **Native Benefits:**
            - Faster startup time (milliseconds)
            - Lower memory consumption 
            - Smaller runtime footprint

      - name: Comment RC Version on PR (Regular)
        if: ${{ contains(github.event.pull_request.labels.*.name, 'RC') && !contains(github.event.pull_request.labels.*.name, 'native') }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            üöÄ New Release Candidate Version generated: `${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}`
            üì¶ Docker image published:
            `${{ env.IMAGE_NAME }}:${{ steps.rc_version.outputs.rc_version }}`