name: Generate OpenAPI Spec

on:
  push:
    branches:
      - "main"

jobs:
  generate-openapi:
    permissions: write-all
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: maiconlanzendorf/authentication-service

    steps:
      - uses: actions/checkout@v3

      - name: Give mvnw permission to execute
        run: chmod +x ./mvnw

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build application
        run: ./mvnw clean package -DskipTests

      - name: Run app in background (on port 8080)
        run: |
          java -Dserver.port=8080 -jar target/*.jar > app.log 2>&1 &  # Rodando no background sem nohup
          sleep 60  # Espera de 60 segundos para garantir que o servidor tenha tempo de inicializar

      - name: Check if app is up and running
        run: |
          # Verifica se a aplicação está ativa antes de fazer o curl
          if curl --max-time 30 http://localhost:8080/; then
            echo "App is running on port 8080"
          else
            echo "App is not running on port 8080"
            exit 1  # Isso vai fazer com que o workflow falhe se o serviço não estiver rodando
          fi

      - name: Fetch OpenAPI JSON
        run: curl http://localhost:8080/v3/api-docs -o openapi.json

      - name: Clone swagger repo
        run: git clone https://github.com/Global-lanz/documentation.github.io.git swagger-docs

      - name: Copy OpenAPI to docs repo and commit
        run: |
          cp openapi.json swagger-docs/openapi/${{ env.IMAGE_NAME }}.json
          cd swagger-docs
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update OpenAPI spec [skip ci]" || echo "No changes"
          git push https://x-access-token:${{ secrets.DOCS_REPO_TOKEN }}@github.com/Global-lanz/documentation.github.io.git HEAD:main
